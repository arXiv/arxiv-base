# Dockerfile for fastly log ingest
#
# Runs arxiv.ops.fastly_log_ingest.app see arxiv/ops/fastly_log_ingest
#
# Needs to be run with a SA that can read from the pub/sub subscription
# and write to the project logs.
# Use this like this:
#
# make a servcie account fastly-logs-ingest
# grant it Pub/Sub subscriber, logging writer, Artifact Registry reader on us-central1-docker.pkg.dev/arxiv-production/arxiv-docker

# Build:
# gcloud auth configure-docker us-central1-docker.pkg.dev # one time setup
# docker build -f deploy/Dockerfile-fastlylogingest -t arxiv-fastly-log-ingest .
# TAG=us-central1-docker.pkg.dev/arxiv-production/arxiv-docker/arxiv-fastly-log-ingest
# docker tag arxiv-fastly-log-ingest $TAG
# docker push $TAG

FROM python:3.11-bookworm

ENV PYTHONFAULTHANDLER=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONHASHSEED=random \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    PIP_DEFAULT_TIMEOUT=100 \
    POETRY_VERSION=1.3.2 \
    LC_ALL=en_US.utf8 \
    LANG=en_US.utf8

RUN useradd --create-home busybody
USER busybody
WORKDIR /app

ENV VENV=/app/venv
RUN python3 -m venv $VENV
ENV PATH="$VENV/bin:$PATH"

RUN pip install -U pip "poetry==$POETRY_VERSION"
COPY poetry.lock pyproject.toml ./
RUN poetry config virtualenvs.create false &&\
    poetry install --no-root\
    --no-ansi --no-interaction\
    --only main --without dev 

COPY ./arxiv/ ./arxiv/
CMD PYTHONPATH="/app" python3 arxiv/ops/fastly_log_ingest/app.py
